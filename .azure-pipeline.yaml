trigger:
- master

jobs:
- job: Ubuntu

  strategy:
    matrix:
      clang7:
        CC: clang-7
        CXX: clang++-7
        LLVM_VERSION: 7
        UBUNTU_NAME: xenial
        IMAGE_NAME: 'ubuntu-16.04'
      clang9:
        CC: clang-9
        CXX: clang++-9
        LLVM_VERSION: 9
        UBUNTU_NAME: focal
        IMAGE_NAME: 'ubuntu-20.04'
      gcc7:
        CC: gcc-7
        CXX: g++-7
        UBUNTU_NAME: xenial
        IMAGE_NAME: 'ubuntu-16.04'
      gcc9:
        CC: gcc-9
        CXX: g++-9
        UBUNTU_NAME: focal
        IMAGE_NAME: 'ubuntu-20.04'

  pool:
    vmImage: $(IMAGE_NAME)

  steps:
    - checkout: self

    - script: |
        sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test"
        if [[ $(LLVM_VERSION) ]]; then
          wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/$(UBUNTU_NAME)/ llvm-toolchain-${UBUNTU_NAME}-$(LLVM_VERSION) main"
          sudo apt-get update
          sudo apt-get install --no-install-suggests --no-install-recommends clang-$(LLVM_VERSION)
        else:
          sudo apt-get update
          sudo apt-get install --no-install-suggests --no-install-recommends $CXX
        fi
      displayName: "Install build toolchain"

    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: "Add conda to PATH"

    - script: |
        conda create --yes --quiet --name foamalgo
        source activate foamalgo
        conda install -y cmake -c anaconda
        conda install -y -c conda-forge tbb-devel xsimd xtensor xtensor-blas numpy xtensor-python
      displayName: "Create Anaconda environment"

    - script: |
        source activate foamalgo
        export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
        pip install -e .[test]
        python setup.py build_ext --inplace --with-tests
        python setup.py test -v
      displayName: 'Build and test'

- job: macOS

  strategy:
    matrix:
      macOS_10_14:
        IMAGE_NAME: 'macos-10.14'
      macOS_10_15:
        IMAGE_NAME: 'macos-10.15'

  pool:
    vmImage: $(IMAGE_NAME)

  variables:
    CC: clang
    CXX: clang++

  steps:
    - checkout: self
